parse:
  additional_commands:
    cc_binary:
      kwargs:
        DEPS: '*'
        PKGDEPS: '*'
        PROPERTIES:
          kwargs:
            EXPORT_NAME: 1
            OUTPUT_NAME: 1
        SRCS: '*'
      pargs: 1+
    cc_library:
      flags:
      - STATIC
      - SHARED
      kwargs:
        DEPS: '*'
        PKGDEPS: '*'
        PROPERTIES:
          kwargs:
            EXPORT_NAME: 1
            INTERFACE_INCLUDE_DIRECTORIES: 1
            LIBRARY_OUTPUT_NAME: 1
            SOVERSION: 1
            VERSION: 1
        SRCS: '*'
      pargs: 1+
    cc_test:
      kwargs:
        ARGV: '*'
        DEPS: '*'
        LABELS: '*'
        PKGDEPS: '*'
        SRCS: '*'
        TEST_DEPS: '*'
        WORKING_DIRECTORY: '*'
      pargs: 1
    check_call:
      flags:
      - OUTPUT_QUIET
      - ERROR_QUIET
      - OUTPUT_STRIP_TRAILING_WHITESPACE
      - ERROR_STRIP_TRAILING_WHITESPACE
      kwargs:
        COMMAND: '*'
        ENCODING: '1'
        ERROR_FILE: '1'
        ERROR_VARIABLE: '1'
        INPUT_FILE: '1'
        OUTPUT_FILE: '1'
        OUTPUT_VARIABLE: '1'
        RESULTS_VARIABLE: '1'
        RESULT_VARIABLE: '1'
        TIMEOUT: '1'
        WORKING_DIRECTORY: '1'
    create_debian_binary_packages:
      kwargs:
        DEPS: '*'
        OUTPUTS: '*'
      pargs:
      - 3
      - +
    create_debian_packages:
      kwargs:
        DEPS: '*'
        OUTPUTS: '*'
      pargs:
      - flags:
        - FORCE_PBUILDER
        nargs: +
    debhelp:
      pargs:
      - 1+
      spelling: DEBHELP
    exportvars:
      kwargs:
        VARS: +
      pargs: 1+
      spelling: EXPORTVARS
    format_and_lint:
      kwargs:
        CC: '*'
        CMAKE: '*'
        JS: '*'
        PY: '*'
        SHELL: '*'
    get_debs:
      pargs:
      - 3
      - '*'
    importvars:
      kwargs:
        VARS: +
      pargs: 1+
      spelling: IMPORTVARS
    pkg_find:
      kwargs:
        PKG: '*'
    stage_files:
      kwargs:
        FILES: '*'
        LIST: 1
        SOURCEDIR: 1
        STAGE: 1
  override_spec: {}
  vartags: []
  proptags: []
format:
  disable: false
  line_width: 250
  tab_size: 2
  use_tabchars: false
  fractional_tab_policy: use-space
  max_subgroups_hwrap: 6
  max_pargs_hwrap: 8
  max_rows_cmdline: 2
  separate_ctrl_name_with_space: false
  separate_fn_name_with_space: false
  dangle_parens: true
  dangle_align: child
  min_prefix_chars: 4
  max_prefix_chars: 10
  max_lines_hwrap: 2
  line_ending: unix
  command_case: lower
  keyword_case: upper
  always_wrap: []
  enable_sort: true
  autosort: true
  require_valid_layout: false
  layout_passes: {}
markup:
  bullet_char: '*'
  enum_char: .
  first_comment_is_literal: true
  literal_comment_pattern: null
  fence_pattern: ^\s*([`~]{3}[`~]*)(.*)$
  ruler_pattern: ^\s*[^\w\s]{3}.*[^\w\s]{3}$
  explicit_trailing_pattern: '#<'
  hashruler_min_length: 10
  canonicalize_hashrulers: true
  enable_markup: true
lint:
  disabled_codes: [C0103]
  function_pattern: '[0-9a-z_]+'
  macro_pattern: '[0-9A-Z_a-z]+'
  global_var_pattern: '[0-9A-Z][0-9A-Z_]+'
  internal_var_pattern: _[0-9A-Z][0-9A-Z_]+
  local_var_pattern: '[0-9a-z_]+'
  private_var_pattern: _[0-9a-z_]+
  public_var_pattern: '[0-9A-Z][0-9A-Z_]+'
  argument_var_pattern: '[a-z][a-z0-9_]+'
  keyword_pattern: '[0-9A-Z_]+'
  max_conditionals_custom_parser: 2
  min_statement_spacing: 1
  max_statement_spacing: 2
  max_returns: 6
  max_branches: 12
  max_arguments: 5
  max_localvars: 15
  max_statements: 50
encode:
  emit_byteorder_mark: false
  input_encoding: utf-8
  output_encoding: utf-8
misc:
  per_command: {}
